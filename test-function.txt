Shift PROGRAM
Shift IDENTIFIER
Shift LPAREN
Shift IDENTIFIER
reduce rule 2
Shift COMMA
Shift IDENTIFIER
reduce rule 3
Shift COMMA
Shift IDENTIFIER
reduce rule 3
Shift RPAREN
Shift SEMICOLON
reduce rule 5
Shift VAR
Shift IDENTIFIER
reduce rule 2
Shift COMMA
Shift IDENTIFIER
reduce rule 3
Shift COLON
Shift integer
reduce rule 8
reduce rule 6
Shift SEMICOLON
reduce rule 4
Shift FUNCTION
reduce rule 12
Shift IDENTIFIER
Shift LPAREN
Shift IDENTIFIER
reduce rule 21
reduce rule 2
Shift COLON
Shift integer
reduce rule 8
reduce rule 6
Shift RPAREN
reduce rule 18
reduce rule 16
Shift COLON
Shift integer
reduce rule 8
Shift SEMICOLON
reduce rule 14
reduce rule 5
Shift BEGIN
Shift IDENTIFIER
Shift ASSIGNMENT
reduce rule 35
reduce rule 33
Shift IDENTIFIER
Shift STAR
reduce rule 35
reduce rule 45
reduce rule 43
reduce rule 55
Shift IDENTIFIER
Shift END
reduce rule 35
reduce rule 45
reduce rule 44
reduce rule 41
reduce rule 39
reduce rule 27
reduce rule 25
reduce rule 23
reduce rule 22
reduce rule 13
Shift SEMICOLON
reduce rule 11
Shift BEGIN
Shift IDENTIFIER
Shift ASSIGNMENT
reduce rule 35
reduce rule 33
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift SEMICOLON
reduce rule 41
reduce rule 39
reduce rule 27
reduce rule 25
Shift IDENTIFIER
Shift ASSIGNMENT
reduce rule 35
reduce rule 33
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift SEMICOLON
reduce rule 41
reduce rule 39
reduce rule 27
reduce rule 26
Shift IDENTIFIER
Shift ASSIGNMENT
reduce rule 35
reduce rule 33
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift PLUS
reduce rule 41
reduce rule 53
Shift IDENTIFIER
Shift LPAREN
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift RPAREN
reduce rule 41
reduce rule 39
reduce rule 37
reduce rule 46
reduce rule 43
Shift SEMICOLON
reduce rule 42
reduce rule 39
reduce rule 27
reduce rule 26
Shift IDENTIFIER
Shift ASSIGNMENT
reduce rule 35
reduce rule 33
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift STAR
reduce rule 55
Shift IDENTIFIER
Shift LPAREN
Shift DIGSEQ
reduce rule 47
reduce rule 43
Shift RPAREN
reduce rule 41
reduce rule 39
reduce rule 37
reduce rule 46
reduce rule 44
Shift END
reduce rule 41
reduce rule 39
reduce rule 27
reduce rule 26
reduce rule 23
reduce rule 22
Shift DOT
reduce rule 1
-----------------------------------------------
 PROGRAM
        foo
        (
        input
                ,
                output
                ,
                error
        )
        ;
        VAR
        a
                ,
                b
        :
        /type
                integer
        ;
         /subprogram_declarations
         /subprogram_declaration
                         /subprogram_head
                                FUNCTION
                                simplesum
                                 /arguments
                                        (
                                         /PARAMETER_LISt
                                                a
                                                :
                                                /type
                                                        integer
                                        )
                                :
                                integer
                                ;
                        /compound_statement
                                BEGIN
                                /optional_statements
                                        /statement_list
                                                /statement
                                                         /varible
                                                                simplesum
                                                        :=
                                                        /expression 
                                                                /simple expression 
                                                                        /term
                                                                                /factor
                                                                                        a
                                                                                *
                                                                                /factor
                                                                                        b
                                END
        ;
        /compound_statement
                BEGIN
                /optional_statements
                        /statement_list
                                /statement
                                         /varible
                                                a
                                        :=
                                        /expression 
                                                /simple expression 
                                                        /term
                                                                7
                                ;
                                /statement
                                         /varible
                                                b
                                        :=
                                        /expression 
                                                /simple expression 
                                                        /term
                                                                13
                                ;
                                /statement
                                         /varible
                                                a
                                        :=
                                        /expression 
                                                /simple expression 
                                                        /term
                                                                3
                                                        +
                                                        /term
                                                                /factor
                                                                        simplesum
                                                                        (
                                                                        /expression_list
                                                                                /expression 
                                                                                        /simple expression 
                                                                                                /term
                                                                                                        10
                                                                        )
                                ;
                                /statement
                                         /varible
                                                b
                                        :=
                                        /expression 
                                                /simple expression 
                                                        /term
                                                                1
                                                                *
                                                                /factor
                                                                        simplesum
                                                                        (
                                                                        /expression_list
                                                                                /expression 
                                                                                        /simple expression 
                                                                                                /term
                                                                                                        -10
                                                                        )
                END
        .
